{\rtf1\ansi\uc0 \deff1{\fonttbl{\f1\fmodern\fprq1\fcharset0 MS Shell Dlg 2;}}{\colortbl;\red255\green255\blue255;\red00\green00\blue00;\red255\green00\blue00;\red255\green00\blue00;\red00\green00\blue255;\red00\green00\blue255;\red255\green34\blue255;\red255\green34\blue255;\red255\green00\blue00;\red00\green00\blue255;\red00\green00\blue00;\red178\green104\blue24;\red00\green255\blue00;\red178\green104\blue24;\red00\green00\blue00;}
\paperw11905\paperh16837\margl1134\margr1134\margt1134\margb1134\sectd\plain\f1\fs20
\pard \cbpat1{{\cf2{}}{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Module}}}\par\pard
\cbpat1{{\cf6{   CommandSM.c}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Revision}}}\par\pard
\cbpat1{{\cf6{   {1}.{0}.{1}}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{   This is a template file for implementing flat state machines under the}}}\par\pard
\cbpat1{{\cf6{   Gen{2} Events and Services Framework.}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ History}}}\par\pard
\cbpat1{{\cf6{ When           Who     What/Why}}}\par\pard
\cbpat1{{\cf6{ -------------- ---     --------}}}\par\pard
\cbpat1{{\cf6{ {0}{1}/{1}{5}/{1}{2} {1}{1}:{1}{2} jec      revisions for Gen{2} framework}}}\par\pard
\cbpat1{{\cf6{ {1}{1}/{0}{7}/{1}{1} {1}{1}:{2}{6} jec      made the queue static}}}\par\pard
\cbpat1{{\cf6{ {1}{0}/{3}{0}/{1}{1} {1}{7}:{5}{9} jec      fixed references to CurrentEvent in RunTemplateSM()}}}\par\pard
\cbpat1{{\cf6{ {1}{0}/{2}{3}/{1}{1} {1}{8}:{2}{0} jec      began conversion from SMTemplate.c ({0}{2}/{2}{0}/{0}{7} rev)}}}\par\pard
\cbpat1{{\cf6{****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf6{/*----------------------------- Include Files -----------------------------*/}}{\cf2{}}}\par\pard
\cbpat1{{\cf6{/* include header files for this state machine as well as any machines at the}}}\par\pard
\cbpat1{{\cf6{   next lower level in the hierarchy that are sub-machines to this machine}}}\par\pard
\cbpat1{{\cf6{*/}}{\cf2{}}}\par\pard
\cbpat1{{\cf8{#include <stdio.h>}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"ES_Configure.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"ES_Framework.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"DEFINITIONS.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"CommandSM.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"SPI_Master.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"USART.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"XBeeComSM.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/*----------------------------- Module Defines ----------------------------*/}}{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{{\cf6{/*---------------------------- Module Functions ---------------------------*/}}{\cf2{}}}\par\pard
\cbpat1{{\cf6{/* prototypes for private functions for this machine.They should be functions}}}\par\pard
\cbpat1{{\cf6{   relevant to the behavior of this state machine}}}\par\pard
\cbpat1{{\cf6{*/}}{\cf2{}}}\par\pard
\cbpat1{{\cf13{void}} {\cf2{}}{\cf15{XmitUSARTMsg}}{\cf2{}}{\cf11{(}} {\cf2{}}{\cf13{void}} {\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/*---------------------------- Module Variables ---------------------------*/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// everybody needs a state variable, you may need others as well.}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// type of state variable should match htat of enum in header file}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{static}} {\cf2{CommandState_t CurrentState}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{static char}}	{\cf2{SpecialByteNum}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{static unsigned int}} {\cf2{PodsAddress}}{\cf11{;}} {\cf2{}}{\cf5{// Address of the PODS ROAMER is connected to}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{static unsigned char}} {\cf2{PodAddHI}}{\cf11{;}} {\cf2{}}{\cf5{//hi byte of Target Address}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{static unsigned char}} {\cf2{PodAddLO}}{\cf11{;}} {\cf2{}}{\cf5{//lo byte of TargetAddress}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{static unsigned char}} {\cf2{RoamerNum}} {\cf11{=}} {\cf2{}}{\cf4{{6}}}{\cf2{}}{\cf11{;}} {\cf2{}}{\cf5{//Initialized to Team Number + {3}}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{static unsigned char}} {\cf2{ROAMER_NUM}} {\cf11{=}} {\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{;}} {\cf2{}}{\cf5{//Static ROAMER Num for testing}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{static unsigned char}} {\cf2{BatteryInfoFlag}} {\cf11{=}} {\cf2{}}{\cf4{{1}}}{\cf2{}}{\cf11{;}} {\cf2{}}{\cf5{//if BatteryInfoFlag is HI, then send out {0}x{3}F to get Battery Info, otherwise command lamp states on SPECIAL}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{static unsigned char}} {\cf2{LampCommand}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf13{unsigned char}} {\cf2{USART_XmitArray}}{\cf11{[}}{\cf2{XMIT_ARR_LEN}}{\cf11{];}} {\cf2{}}{\cf5{//total number of bytes we need to send out in every packet = {1}{4}}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{unsigned char}} {\cf2{SPECIAL_ReqArray}}{\cf11{[}}{\cf2{}}{\cf4{{5}}}{\cf2{}}{\cf11{];}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{extern}} {\cf2{}}{\cf13{unsigned char}} {\cf2{DataArray}}{\cf11{[}}{\cf2{POD{2}ROAM}}{\cf11{];}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{extern}} {\cf2{}}{\cf13{unsigned char}} {\cf2{SPECIAL_InfoArray}}{\cf11{[}}{\cf2{}}{\cf4{{5}}}{\cf2{}}{\cf11{];}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{{\cf5{// with the introduction of Gen{2}, we need a module level Priority var as well}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{static uint{8}_t}} {\cf2{MyPriority}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{{\cf6{/*------------------------------ Module Code ------------------------------*/}}{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Function}}}\par\pard
\cbpat1{{\cf6{     InitCommandSM}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Parameters}}}\par\pard
\cbpat1{{\cf6{     uint{8}_t : the priorty of this service}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Returns}}}\par\pard
\cbpat1{{\cf6{     boolean, False if error in initialization, True otherwise}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{     Saves away the priority, sets up the initial transition and does any}}}\par\pard
\cbpat1{{\cf6{     other required initialization for this state machine}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Author}}}\par\pard
\cbpat1{{\cf6{     J. Edward Carryer, {1}{0}/{2}{3}/{1}{1}, {1}{8}:{5}{5}}}}\par\pard
\cbpat1{{\cf6{****************************************************************************/}}{\cf2{}\par\pard
\cbpat1{boolean}} {\cf15{InitCommandSM}} {\cf2{}}{\cf11{(}} {\cf2{}}{\cf13{uint{8}_t}} {\cf2{Priority}} {\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{    ES_Event ThisEvent}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}\par\pard
\cbpat1{    MyPriority}} {\cf11{=}} {\cf2{Priority}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}    {\cf5{// put us into the Initial PseudoState - TESTING ONLY}}}\par\pard
\cbpat1{{\cf2{    CurrentState}} {\cf11{=}} {\cf2{InitPState}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{    {\cf5{//initialize a port to light up LED on PORTC{3} when ROAMER is connected to POD}}}\par\pard
\cbpat1{{\cf2{    TRISC}} {\cf11{&= ~}}{\cf2{CONNECTED_PORT}}{\cf11{;}} {\cf2{}}{\cf5{//set as output}}}\par\pard
\cbpat1{{\cf2{    PORTC}} {\cf11{&= ~}}{\cf2{CONNECTED_PORT}}{\cf11{;}} {\cf2{}}{\cf5{//turn off LED}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{    {\cf5{//initialize {2} ports to determine Roamer #, input = {1}}}}\par\pard
\cbpat1{{\cf2{    TRISC}} {\cf11{|=}} {\cf2{ROAMERSEL{1}_PORT}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{    TRISC}} {\cf11{|=}} {\cf2{ROAMERSEL{2}_PORT}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{    {\cf5{// post the initial transition event}}}\par\pard
\cbpat1{{\cf2{    ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{=}} {\cf2{ES_INIT}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{    {\cf12{if}} {\cf2{}}{\cf11{(}}{\cf2{}}{\cf15{ES_PostToService}}{\cf2{}}{\cf11{(}} {\cf2{MyPriority}}{\cf11{,}} {\cf2{ThisEvent}}{\cf11{) ==}} {\cf2{True}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}        {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{return}} {\cf2{True}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}        {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}    {\cf12{else}}}\par\pard
\cbpat1{{\cf2{}}        {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{return}} {\cf2{False}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}        {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Function}}}\par\pard
\cbpat1{{\cf6{     PostCommandSM}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Parameters}}}\par\pard
\cbpat1{{\cf6{     EF_Event ThisEvent , the event to post to the queue}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Returns}}}\par\pard
\cbpat1{{\cf6{     boolean False if the Enqueue operation failed, True otherwise}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{     Posts an event to this state machine's queue}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Author}}}\par\pard
\cbpat1{{\cf6{     J. Edward Carryer, {1}{0}/{2}{3}/{1}{1}, {1}{9}:{2}{5}}}}\par\pard
\cbpat1{{\cf6{****************************************************************************/}}{\cf2{}\par\pard
\cbpat1{boolean}} {\cf15{PostCommandSM}}{\cf2{}}{\cf11{(}} {\cf2{ES_Event ThisEvent}} {\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}    {\cf12{return}} {\cf2{}}{\cf15{ES_PostToService}}{\cf2{}}{\cf11{(}} {\cf2{MyPriority}}{\cf11{,}} {\cf2{ThisEvent}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Function}}}\par\pard
\cbpat1{{\cf6{    RunCommandSM}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Parameters}}}\par\pard
\cbpat1{{\cf6{   ES_Event : the event to process}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Returns}}}\par\pard
\cbpat1{{\cf6{   ES_Event, ES_NO_EVENT if no error ES_ERROR otherwise}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{   add your description here}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{   uses nested switch/case to implement the machine.}}}\par\pard
\cbpat1{{\cf6{ Author}}}\par\pard
\cbpat1{{\cf6{   J. Edward Carryer, {0}{1}/{1}{5}/{1}{2}, {1}{5}:{2}{3}}}}\par\pard
\cbpat1{{\cf6{****************************************************************************/}}{\cf2{}\par\pard
\cbpat1{ES_Event}} {\cf15{RunCommandSM}}{\cf2{}}{\cf11{(}} {\cf2{ES_Event ThisEvent}} {\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{    ES_Event ReturnEvent}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{    ReturnEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{=}} {\cf2{ES_NO_EVENT}}{\cf11{;}} {\cf2{}}{\cf5{// assume no errors}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{    {\cf12{switch}} {\cf2{}}{\cf11{(}} {\cf2{CurrentState}} {\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}        {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}        {\cf12{case}} {\cf2{InitPState}} {\cf11{:}}       {\cf2{}}{\cf5{// If current state is initial Psedudo State}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{if}} {\cf2{}}{\cf11{(}} {\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{ES_INIT}} {\cf11{)}}{\cf2{}}{\cf5{// only respond to EF_Init}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{InitUSART_XmitArray}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{InitSPECIAL_ReqArray}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{//Configure ROAMER #}}}\par\pard
\cbpat1{{\cf2{                    RoamerNum}} {\cf11{= (}}{\cf2{ROAMERSEL_{2}}} {\cf11{+}} {\cf2{ROAMERSEL_{1}}}{\cf11{) +}} {\cf2{}}{\cf4{{1}}}{\cf2{}}{\cf11{;}} {\cf2{}}{\cf5{//Roamer number is {1},{2}, or {3}}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf5{//ROAMER_NUM = (ROAMERSEL_{2} + ROAMERSEL_{1}) + {1}; //Roamer number is {1},{2}, or {3}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Start the timer for Initialization}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{ES_Timer_InitTimer}}{\cf2{}}{\cf11{(}}{\cf2{COMMAND_TIMER}}{\cf11{,}} {\cf2{INITIAL_TIME}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Initialization complete, change state to wait for PODS broadcast}}}\par\pard
\cbpat1{{\cf2{                    CurrentState}} {\cf11{=}} {\cf2{Waiting{4}XBee}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{break}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{        {\cf12{case}} {\cf2{Waiting{4}XBee}} {\cf11{:}}       {\cf2{}}{\cf5{// If current state is waiting for the XBee to boot}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{if}} {\cf2{}}{\cf11{( (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{ES_TIMEOUT}}{\cf11{) && (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventParam}} {\cf11{==}} {\cf2{COMMAND_TIMER}}{\cf11{) )}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf5{// Initialization complete, change state to wait for PODS broadcast}}}\par\pard
\cbpat1{{\cf2{                    CurrentState}} {\cf11{=}} {\cf2{IdlingDisconnected}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{break}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{        {\cf12{case}} {\cf2{IdlingDisconnected}} {\cf11{:}}       {\cf2{}}{\cf5{// If current state is state onex}}}\par\pard
\cbpat1{{\cf2{}}            {\cf5{//If event is a new message from the XBee and it is a connect Message from the POD}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{if}} {\cf2{}}{\cf11{( (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{NEW_MSG}}{\cf11{) && (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventParam}} {\cf11{==}} {\cf2{CONNECT_MSG}}{\cf11{) && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_PODNUM}}{\cf11{] ==}} {\cf2{RoamerNum}}{\cf11{) )}} {\cf2{}}{\cf5{//needs to be ROAMER_NUM}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{                    PodAddHI}} {\cf11{=}} {\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETHI}}{\cf11{];}}}\par\pard
\cbpat1{{\cf2{                    PodAddLO}} {\cf11{=}} {\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETLO}}{\cf11{];}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf15{UpdateUSART_XmitArray}}{\cf2{}}{\cf11{(}}{\cf2{TARGET_H}}{\cf11{,}} {\cf2{PodAddHI}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{UpdateUSART_XmitArray}}{\cf2{}}{\cf11{(}}{\cf2{TARGET_L}}{\cf11{,}} {\cf2{PodAddLO}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{UpdateUSART_XmitArray}}{\cf2{}}{\cf11{(}}{\cf2{TYPE}}{\cf11{,}} {\cf2{CONNECT_ACC}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf15{XmitUSARTMsg}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Start the timer for Timeout from PODS}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{ES_Timer_InitTimer}}{\cf2{}}{\cf11{(}}{\cf2{XBEE_TIMER}}{\cf11{,}} {\cf2{XBEE_TIMEOUT}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}\par\pard
\cbpat1{                    CurrentState}} {\cf11{=}} {\cf2{IdlingConnected}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{break}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{        {\cf12{case}} {\cf2{IdlingConnected}} {\cf11{:}}       {\cf2{}}{\cf5{// If current state is state one}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{if}} {\cf2{}}{\cf11{( (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{NEW_MSG}}{\cf11{) && (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventParam}} {\cf11{==}} {\cf2{COMMAND_MSG}}{\cf11{)  && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETHI}}{\cf11{] ==}} {\cf2{PodAddHI}}{\cf11{) && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETLO}}{\cf11{] ==}} {\cf2{PodAddLO}}{\cf11{) )}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf5{//Turn on Connected Indicator LED}}}\par\pard
\cbpat1{{\cf2{                    CONNECTED_LED}} {\cf11{=}} {\cf2{HI}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Respond to PODS with current STATUS and last Command}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{UpdateUSART_XmitArray}}{\cf2{}}{\cf11{(}}{\cf2{TYPE}}{\cf11{,}} {\cf2{STATUS_MSG}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{UpdateUSART_XmitArray}}{\cf2{}}{\cf11{(}}{\cf2{DATA_{4}}}{\cf11{,}} {\cf2{DataArray}}{\cf11{[}}{\cf2{RX_CAM}}{\cf11{]);}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{XmitUSARTMsg}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Start the timer for Timeout from PODS}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{ES_Timer_InitTimer}}{\cf2{}}{\cf11{(}}{\cf2{XBEE_TIMER}}{\cf11{,}} {\cf2{XBEE_TIMEOUT}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Update the Left Wheel}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{UpdateLW}}{\cf2{}}{\cf11{(}}{\cf2{DataArray}}{\cf11{,}} {\cf2{RX_LW}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{                    CurrentState}} {\cf11{=}} {\cf2{UpdatingLW}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{if}} {\cf2{}}{\cf11{( (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{NEW_MSG}}{\cf11{) && (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventParam}} {\cf11{==}} {\cf2{DISCONNECT_MSG}}{\cf11{) && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETHI}}{\cf11{] ==}} {\cf2{PodAddHI}}{\cf11{) && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETLO}}{\cf11{] ==}} {\cf2{PodAddLO}}{\cf11{) )}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf5{//Turn off Connected Indicator LED}}}\par\pard
\cbpat1{{\cf2{                    CONNECTED_LED}} {\cf11{=}} {\cf2{LO}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Stop the BOT entirely because because disconnecting with PODS}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{StopLW}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Change the transmit array to a disconnect accepted message}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{UpdateUSART_XmitArray}}{\cf2{}}{\cf11{(}}{\cf2{TYPE}}{\cf11{,}} {\cf2{DISCON_ACC}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{XmitUSARTMsg}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Change current state to wait for next PODS}}}\par\pard
\cbpat1{{\cf2{                    CurrentState}} {\cf11{=}} {\cf2{Disconnecting}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{            {\cf12{if}} {\cf2{}}{\cf11{( (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{ES_TIMEOUT}}{\cf11{) && (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventParam}} {\cf11{==}} {\cf2{XBEE_TIMER}}{\cf11{) )}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf5{//Turn off Connected Indicator LED}}}\par\pard
\cbpat1{{\cf2{                    CONNECTED_LED}} {\cf11{=}} {\cf2{LO}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf5{// Stop the BOT entirely because we've lost connection with PODS}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{StopLW}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{                    CurrentState}} {\cf11{=}} {\cf2{Disconnecting}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{break}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{        {\cf12{case}} {\cf2{UpdatingLW}} {\cf11{:}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{if}} {\cf2{}}{\cf11{(}} {\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{BUFFER_EMPTY}} {\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{UpdateRW}}{\cf2{}}{\cf11{(}}{\cf2{DataArray}}{\cf11{,}} {\cf2{RX_RW}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{                    CurrentState}} {\cf11{=}} {\cf2{UpdatingRW}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{            {\cf12{if}} {\cf2{}}{\cf11{( (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{NEW_MSG}}{\cf11{) && (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventParam}} {\cf11{==}} {\cf2{DISCONNECT_MSG}}{\cf11{) && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETHI}}{\cf11{] ==}} {\cf2{PodAddHI}}{\cf11{) && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETLO}}{\cf11{] ==}} {\cf2{PodAddLO}}{\cf11{) )}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf5{//Turn off Connected Indicator LED}}}\par\pard
\cbpat1{{\cf2{                    CONNECTED_LED}} {\cf11{=}} {\cf2{LO}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Stop the BOT entirely because disconnecting with PODS}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{StopLW}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Change the transmit array to a disconnect accepted message}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{UpdateUSART_XmitArray}}{\cf2{}}{\cf11{(}}{\cf2{TYPE}}{\cf11{,}} {\cf2{DISCON_ACC}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{XmitUSARTMsg}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Change current state to wait for next PODS}}}\par\pard
\cbpat1{{\cf2{                    CurrentState}} {\cf11{=}} {\cf2{Disconnecting}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{break}}{\cf2{}}{\cf11{;}} {\cf2{}}{\cf5{// end switch on CurrentEvent}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{        {\cf12{case}} {\cf2{UpdatingRW}} {\cf11{:}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{if}} {\cf2{}}{\cf11{(}} {\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}}  {\cf11{==}} {\cf2{BUFFER_EMPTY}} {\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{UpdateCLAW}}{\cf2{}}{\cf11{(}}{\cf2{DataArray}}{\cf11{,}} {\cf2{RX_CLAW}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{                    CurrentState}} {\cf11{=}} {\cf2{UpdatingCLAW}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{            {\cf12{if}} {\cf2{}}{\cf11{( (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{NEW_MSG}}{\cf11{) && (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventParam}} {\cf11{==}} {\cf2{DISCONNECT_MSG}}{\cf11{) && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETHI}}{\cf11{] ==}} {\cf2{PodAddHI}}{\cf11{) && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETLO}}{\cf11{] ==}} {\cf2{PodAddLO}}{\cf11{) )}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf5{//Turn off Connected Indicator LED}}}\par\pard
\cbpat1{{\cf2{                    CONNECTED_LED}} {\cf11{=}} {\cf2{LO}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Stop the BOT entirely because disconnecting with PODS}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{StopLW}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Change the transmit array to a disconnect accepted message}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{UpdateUSART_XmitArray}}{\cf2{}}{\cf11{(}}{\cf2{TYPE}}{\cf11{,}} {\cf2{DISCON_ACC}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{XmitUSARTMsg}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Change current state to wait for next PODS}}}\par\pard
\cbpat1{{\cf2{                    CurrentState}} {\cf11{=}} {\cf2{Disconnecting}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{break}}{\cf2{}}{\cf11{;}}	{\cf2{}}{\cf5{//end switch on CurrentState}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{        {\cf12{case}} {\cf2{UpdatingCLAW}} {\cf11{:}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{if}} {\cf2{}}{\cf11{(}} {\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{BUFFER_EMPTY}} {\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{UpdateCAMERA}}{\cf2{}}{\cf11{(}}{\cf2{DataArray}}{\cf11{,}} {\cf2{RX_CAM}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{                    CurrentState}} {\cf11{=}} {\cf2{UpdatingCAMERA}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{            {\cf12{if}} {\cf2{}}{\cf11{( (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{NEW_MSG}}{\cf11{) && (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventParam}} {\cf11{==}} {\cf2{DISCONNECT_MSG}}{\cf11{) && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETHI}}{\cf11{] ==}} {\cf2{PodAddHI}}{\cf11{) && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETLO}}{\cf11{] ==}} {\cf2{PodAddLO}}{\cf11{) )}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf5{//Turn off Connected Indicator LED}}}\par\pard
\cbpat1{{\cf2{                    CONNECTED_LED}} {\cf11{=}} {\cf2{LO}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Stop the BOT entirely because disconnecting with PODS}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{StopLW}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Change the transmit array to a disconnect accepted message}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{UpdateUSART_XmitArray}}{\cf2{}}{\cf11{(}}{\cf2{TYPE}}{\cf11{,}} {\cf2{DISCON_ACC}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{XmitUSARTMsg}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Change current state to wait for next PODS}}}\par\pard
\cbpat1{{\cf2{                    CurrentState}} {\cf11{=}} {\cf2{Disconnecting}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{break}}{\cf2{}}{\cf11{;}}	{\cf2{}}{\cf5{//end switch on CurrentState}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{        {\cf12{case}} {\cf2{UpdatingCAMERA}} {\cf11{:}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{if}} {\cf2{}}{\cf11{(}} {\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{BUFFER_EMPTY}} {\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{                    SPECIAL_ReqArray}}{\cf11{[}}{\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{] =}} {\cf2{BAT_STATUS}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{                    SpecialByteNum}} {\cf11{=}} {\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{;}} {\cf2{}}{\cf5{// Reset the counter for SpecialByte}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{UpdateSPECIAL}}{\cf2{}}{\cf11{(}}{\cf2{SPECIAL_ReqArray}}{\cf11{,}} {\cf2{SpecialByteNum}}{\cf11{);}} {\cf2{}}{\cf5{// Call the UpdateSPECIAL Function to gather data}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{                    {\cf15{ES_Timer_InitTimer}}{\cf2{}}{\cf11{(}}{\cf2{COMMAND_TIMER}}{\cf11{,}} {\cf2{DELAY_TIME}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{                    CurrentState}} {\cf11{=}} {\cf2{UpdatingSPECIALBattery}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{            {\cf12{if}} {\cf2{}}{\cf11{( (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{NEW_MSG}}{\cf11{) && (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventParam}} {\cf11{==}} {\cf2{DISCONNECT_MSG}}{\cf11{) && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETHI}}{\cf11{] ==}} {\cf2{PodAddHI}}{\cf11{) && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETLO}}{\cf11{] ==}} {\cf2{PodAddLO}}{\cf11{) )}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf5{//Turn off Connected Indicator LED}}}\par\pard
\cbpat1{{\cf2{                    CONNECTED_LED}} {\cf11{=}} {\cf2{LO}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Stop the BOT entirely because disconnecting with PODS}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{StopLW}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Change the transmit array to a disconnect accepted message}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{UpdateUSART_XmitArray}}{\cf2{}}{\cf11{(}}{\cf2{TYPE}}{\cf11{,}} {\cf2{DISCON_ACC}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{XmitUSARTMsg}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Change current state to wait for next PODS}}}\par\pard
\cbpat1{{\cf2{                    CurrentState}} {\cf11{=}} {\cf2{Disconnecting}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{            {\cf12{break}}{\cf2{}}{\cf11{;}}	{\cf2{}}{\cf5{//end switch on CurrentState}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{        {\cf12{case}} {\cf2{UpdatingSPECIALBattery}} {\cf11{:}}       {\cf2{}}{\cf5{// If current state is state one}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{if}} {\cf2{}}{\cf11{( (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{ES_TIMEOUT}}{\cf11{) && (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventParam}} {\cf11{==}} {\cf2{COMMAND_TIMER}}{\cf11{) )}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf12{if}} {\cf2{}}{\cf11{(}} {\cf2{SpecialByteNum}} {\cf11{<}} {\cf2{MAX_BYTES}} {\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}                        {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}\par\pard
\cbpat1{                            SPECIAL_InfoArray}}{\cf11{[}}{\cf2{SpecialByteNum}}{\cf11{] =}} {\cf2{SSPBUF}}{\cf11{;}} {\cf2{}}{\cf5{//read SSPBUFF and store what we get back in an array}}}\par\pard
\cbpat1{{\cf2{                            SpecialByteNum}}{\cf11{++;}}	{\cf2{}}{\cf5{// Increment counter for next call}}}\par\pard
\cbpat1{{\cf2{}}                            {\cf15{UpdateSPECIAL}}{\cf2{}}{\cf11{(}}{\cf2{SPECIAL_ReqArray}}{\cf11{,}} {\cf2{SpecialByteNum}}{\cf11{);}} {\cf2{}}{\cf5{// Call the UpdateSPECIAL Function to gather data}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{                            {\cf15{ES_Timer_InitTimer}}{\cf2{}}{\cf11{(}}{\cf2{COMMAND_TIMER}}{\cf11{,}} {\cf2{DELAY_TIME}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}                        {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf12{else if}} {\cf2{}}{\cf11{(}} {\cf2{SpecialByteNum}} {\cf11{==}} {\cf2{MAX_BYTES}} {\cf11{)}} {\cf2{}}{\cf5{// The maximum number of bytes transferred to the SPECIAL}}}\par\pard
\cbpat1{{\cf2{}}                        {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}\par\pard
\cbpat1{                            SPECIAL_InfoArray}}{\cf11{[}}{\cf2{SpecialByteNum}}{\cf11{] =}} {\cf2{SSPBUF}}{\cf11{;}} {\cf2{}}{\cf5{//read SSPBUFF and store what we get back in an array}}}\par\pard
\cbpat1{{\cf2{}}                            {\cf5{//Update Xmit Array with battery Status info from SPECIAL}}}\par\pard
\cbpat1{{\cf2{}}                            {\cf15{UpdateUSART_XmitArray}}{\cf2{}}{\cf11{(}}{\cf2{DATA_{1}}}{\cf11{,}} {\cf2{SPECIAL_InfoArray}}{\cf11{[}}{\cf2{BAT_LEVEL}}{\cf11{]);}}}\par\pard
\cbpat1{{\cf2{}}                            {\cf15{UpdateUSART_XmitArray}}{\cf2{}}{\cf11{(}}{\cf2{DATA_{2}}}{\cf11{,}} {\cf2{SPECIAL_InfoArray}}{\cf11{[}}{\cf2{CHARGE_STATUS}}{\cf11{]);}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                            {\cf5{//Initiate Transmit Lamp Commands}}}\par\pard
\cbpat1{{\cf2{                            LampCommand}} {\cf11{=}} {\cf2{BASE}} {\cf11{+ (}}{\cf2{LAMP_MASK}} {\cf11{&}} {\cf2{DataArray}}{\cf11{[}}{\cf2{RX_IO}}{\cf11{]);}}}\par\pard
\cbpat1{{\cf2{                            SPECIAL_ReqArray}}{\cf11{[}}{\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{] =}} {\cf2{LampCommand}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                            {\cf5{//SPECIAL_ReqArray[{0}] = DataArray[RX_IO];}}}\par\pard
\cbpat1{{\cf2{                            SpecialByteNum}} {\cf11{=}} {\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{;}} {\cf2{}}{\cf5{// Reset the counter for SpecialByte}}}\par\pard
\cbpat1{{\cf2{}}                            {\cf15{UpdateSPECIAL}}{\cf2{}}{\cf11{(}}{\cf2{SPECIAL_ReqArray}}{\cf11{,}} {\cf2{SpecialByteNum}}{\cf11{);}} {\cf2{}}{\cf5{// Call the UpdateSPECIAL Function to gather data}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{                            {\cf15{ES_Timer_InitTimer}}{\cf2{}}{\cf11{(}}{\cf2{COMMAND_TIMER}}{\cf11{,}} {\cf2{DELAY_TIME}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}\par\pard
\cbpat1{                            CurrentState}} {\cf11{=}} {\cf2{UpdatingSPECIALLamp}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                        {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{            {\cf12{if}} {\cf2{}}{\cf11{( (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{NEW_MSG}}{\cf11{) && (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventParam}} {\cf11{==}} {\cf2{DISCONNECT_MSG}}{\cf11{) && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETHI}}{\cf11{] ==}} {\cf2{PodAddHI}}{\cf11{) && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETLO}}{\cf11{] ==}} {\cf2{PodAddLO}}{\cf11{) )}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf5{//Turn off Connected Indicator LED}}}\par\pard
\cbpat1{{\cf2{                    CONNECTED_LED}} {\cf11{=}} {\cf2{LO}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Stop the BOT entirely because disconnecting with PODS}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{StopLW}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Change the transmit array to a disconnect accepted message}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{UpdateUSART_XmitArray}}{\cf2{}}{\cf11{(}}{\cf2{TYPE}}{\cf11{,}} {\cf2{DISCON_ACC}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{XmitUSARTMsg}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Change current state to wait for next PODS}}}\par\pard
\cbpat1{{\cf2{                    CurrentState}} {\cf11{=}} {\cf2{Disconnecting}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{break}}{\cf2{}}{\cf11{;}}	{\cf2{}}{\cf5{//end switch on CurrentState}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{        {\cf12{case}} {\cf2{UpdatingSPECIALLamp}} {\cf11{:}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{if}} {\cf2{}}{\cf11{( (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{ES_TIMEOUT}}{\cf11{) && (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventParam}} {\cf11{==}} {\cf2{COMMAND_TIMER}}{\cf11{) )}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf12{if}} {\cf2{}}{\cf11{(}} {\cf2{SpecialByteNum}} {\cf11{<}} {\cf2{MAX_BYTES}} {\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}                        {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{                            SPECIAL_InfoArray}}{\cf11{[}}{\cf2{SpecialByteNum}}{\cf11{] =}} {\cf2{SSPBUF}}{\cf11{;}} {\cf2{}}{\cf5{//read SSPBUFF and store what we get back in an array}}}\par\pard
\cbpat1{{\cf2{                            SpecialByteNum}}{\cf11{++;}}	{\cf2{}}{\cf5{// Increment counter for next call}}}\par\pard
\cbpat1{{\cf2{}}                            {\cf15{UpdateSPECIAL}}{\cf2{}}{\cf11{(}}{\cf2{SPECIAL_ReqArray}}{\cf11{,}} {\cf2{SpecialByteNum}}{\cf11{);}} {\cf2{}}{\cf5{// Call the UpdateSPECIAL Function to gather data}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                            {\cf15{ES_Timer_InitTimer}}{\cf2{}}{\cf11{(}}{\cf2{COMMAND_TIMER}}{\cf11{,}} {\cf2{DELAY_TIME}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}                        {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf12{else if}} {\cf2{}}{\cf11{(}} {\cf2{SpecialByteNum}} {\cf11{==}} {\cf2{MAX_BYTES}} {\cf11{)}} {\cf2{}}{\cf5{// The maximum number of bytes transferred to the SPECIAL}}}\par\pard
\cbpat1{{\cf2{}}                        {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{                            SPECIAL_InfoArray}}{\cf11{[}}{\cf2{SpecialByteNum}}{\cf11{] =}} {\cf2{SSPBUF}}{\cf11{;}} {\cf2{}}{\cf5{//read SSPBUFF and store what we get back in an array}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                            {\cf5{//Update Xmit Array with LED Status info from SPECIAL}}}\par\pard
\cbpat1{{\cf2{}}                            {\cf15{UpdateUSART_XmitArray}}{\cf2{}}{\cf11{(}}{\cf2{DATA_{3}}}{\cf11{,}} {\cf2{SPECIAL_InfoArray}}{\cf11{[}}{\cf2{LED_STATE}}{\cf11{]);}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                            {\cf5{// Start the timer for Timeout from PODS}}}\par\pard
\cbpat1{{\cf2{}}                            {\cf15{ES_Timer_InitTimer}}{\cf2{}}{\cf11{(}}{\cf2{XBEE_TIMER}}{\cf11{,}} {\cf2{XBEE_TIMEOUT}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{                            CurrentState}} {\cf11{=}} {\cf2{IdlingConnected}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                        {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{            {\cf12{if}} {\cf2{}}{\cf11{( (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{NEW_MSG}}{\cf11{) && (}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventParam}} {\cf11{==}} {\cf2{DISCONNECT_MSG}}{\cf11{) && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETHI}}{\cf11{] ==}} {\cf2{PodAddHI}}{\cf11{) && (}}{\cf2{DataArray}}{\cf11{[}}{\cf2{RX_TARGETLO}}{\cf11{] ==}} {\cf2{PodAddLO}}{\cf11{) )}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf5{//Turn off Connected Indicator LED}}}\par\pard
\cbpat1{{\cf2{                    CONNECTED_LED}} {\cf11{=}} {\cf2{LO}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Stop the BOT entirely because disconnecting with PODS}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{StopLW}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Change the transmit array to a disconnect accepted message}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{UpdateUSART_XmitArray}}{\cf2{}}{\cf11{(}}{\cf2{TYPE}}{\cf11{,}} {\cf2{DISCON_ACC}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{XmitUSARTMsg}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                    {\cf5{// Change current state to wait for next PODS}}}\par\pard
\cbpat1{{\cf2{                    CurrentState}} {\cf11{=}} {\cf2{Disconnecting}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{break}}{\cf2{}}{\cf11{;}}	{\cf2{}}{\cf5{//end switch on CurrentState}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{        {\cf12{case}} {\cf2{Disconnecting}} {\cf11{:}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{if}} {\cf2{}}{\cf11{(}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{BUFFER_EMPTY}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}                    {\cf15{StopRW}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{                    CurrentState}} {\cf11{=}} {\cf2{IdlingDisconnected}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}            {\cf12{break}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}        {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{    {\cf12{return}} {\cf2{ReturnEvent}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Function}}}\par\pard
\cbpat1{{\cf6{     QueryCommandSM}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Parameters}}}\par\pard
\cbpat1{{\cf6{     None}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Returns}}}\par\pard
\cbpat1{{\cf6{     CommandState_t The current state of the Command state machine}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{     returns the current state of the Command state machine}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Author}}}\par\pard
\cbpat1{{\cf6{     J. Edward Carryer, {1}{0}/{2}{3}/{1}{1}, {1}{9}:{2}{1}}}}\par\pard
\cbpat1{{\cf6{****************************************************************************/}}{\cf2{}\par\pard
\cbpat1{CommandState_t}} {\cf15{QueryCommandSM}} {\cf2{}}{\cf11{(}} {\cf2{}}{\cf13{void}} {\cf2{}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}    {\cf12{return}}{\cf2{}}{\cf11{(}}{\cf2{CurrentState}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf13{int}} {\cf2{}}{\cf15{QueryPodsAddress}} {\cf2{}}{\cf11{(}} {\cf2{}}{\cf13{void}}{\cf2{}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}    {\cf12{return}} {\cf2{PodsAddress}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Function}}}\par\pard
\cbpat1{{\cf6{     QueryUSART_XmitArray}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Parameters}}}\par\pard
\cbpat1{{\cf6{     None}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Returns}}}\par\pard
\cbpat1{{\cf6{     Nothing}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{     Returns pointer to the USART_XmitArray so that interrrupt response can iterate through}}}\par\pard
\cbpat1{{\cf6{	 array}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf13{void}} {\cf2{}}{\cf15{XmitUSARTMsg}} {\cf2{}}{\cf11{(}} {\cf2{}}{\cf13{void}} {\cf2{}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}    {\cf5{// Reset Checksum}}}\par\pard
\cbpat1{{\cf2{    USART_XmitArray}}{\cf11{[}}{\cf2{CHECKSUM}}{\cf11{] =}} {\cf2{}}{\cf4{{0}xFF}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{    TXREG}} {\cf11{=}} {\cf2{USART_XmitArray}}{\cf11{[}}{\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{];}}	{\cf2{}}{\cf5{//send out first byte, which is the START_DELIM}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{    {\cf5{//Clear the interrupt flag}}}\par\pard
\cbpat1{{\cf2{    TXIF}} {\cf11{=}} {\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}    {\cf5{//Allow Interrupts}}}\par\pard
\cbpat1{{\cf2{    TXIE}} {\cf11{=}} {\cf2{}}{\cf4{{1}}}{\cf2{}}{\cf11{;}} 		{\cf2{}}{\cf5{//enable interrupt with TXREG empty}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Function}}}\par\pard
\cbpat1{{\cf6{	 UpdatePodsAddress}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Parameters}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Returns}}}\par\pard
\cbpat1{{\cf6{     Nothing}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{     Returns pointer to the USART_XmitArray so that interrrupt response can iterate through}}}\par\pard
\cbpat1{{\cf6{	 array}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf13{void}} {\cf2{}}{\cf15{InitUSART_XmitArray}} {\cf2{}}{\cf11{(}} {\cf2{}}{\cf13{void}} {\cf2{}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}    {\cf5{// Initialize the USART_XmitArray so static values are captured}}}\par\pard
\cbpat1{{\cf2{    USART_XmitArray}}{\cf11{[}}{\cf2{START_DEL}}{\cf11{] 		=}} {\cf2{START_DELIM}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{    USART_XmitArray}}{\cf11{[}}{\cf2{LENGTH_H}}{\cf11{] 		=}} {\cf2{}}{\cf4{{0}x{0}{0}}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{    USART_XmitArray}}{\cf11{[}}{\cf2{LENGTH_L}}{\cf11{] 		=}} {\cf2{XMIT_LENGTH}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{    USART_XmitArray}}{\cf11{[}}{\cf2{API_ID}}{\cf11{] 		=}} {\cf2{}}{\cf4{{0}x{0}{1}}}{\cf2{}}{\cf11{;}} {\cf2{}}{\cf5{//API ID}}}\par\pard
\cbpat1{{\cf2{    USART_XmitArray}}{\cf11{[}}{\cf2{FRAME_START}}{\cf11{]	=}} {\cf2{}}{\cf4{{0}x{0}{1}}}{\cf2{}}{\cf11{;}} {\cf2{}}{\cf5{//FRAME ID}}}\par\pard
\cbpat1{{\cf2{    USART_XmitArray}}{\cf11{[}}{\cf2{TARGET_H}}{\cf11{] 		=}} {\cf2{}}{\cf4{{0}x{2}{0}}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{    USART_XmitArray}}{\cf11{[}}{\cf2{TARGET_L}}{\cf11{] 		=}} {\cf2{}}{\cf4{{0}x{8}{3}}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{    USART_XmitArray}}{\cf11{[}}{\cf2{OPTIONS}}{\cf11{] 		=}} {\cf2{}}{\cf4{{0}x{0}{0}}}{\cf2{}}{\cf11{;}} {\cf2{}}{\cf5{//options}}}\par\pard
\cbpat1{{\cf2{    USART_XmitArray}}{\cf11{[}}{\cf2{TYPE}}{\cf11{] 			=}} {\cf2{}}{\cf4{{0}x{0}{3}}}{\cf2{}}{\cf11{;}} {\cf2{}}{\cf5{//status}}}\par\pard
\cbpat1{{\cf2{    USART_XmitArray}}{\cf11{[}}{\cf2{DATA_{1}}}{\cf11{] 		=}} {\cf2{}}{\cf4{{0}x{0}{0}}}{\cf2{}}{\cf11{;}} {\cf2{}}{\cf5{//battery %}}}\par\pard
\cbpat1{{\cf2{    USART_XmitArray}}{\cf11{[}}{\cf2{DATA_{2}}}{\cf11{] 		=}} {\cf2{}}{\cf4{{0}x{0}{0}}}{\cf2{}}{\cf11{;}} {\cf2{}}{\cf5{//battery charge/discharge}}}\par\pard
\cbpat1{{\cf2{    USART_XmitArray}}{\cf11{[}}{\cf2{DATA_{3}}}{\cf11{] 		=}} {\cf2{}}{\cf4{{0}xFE}}{\cf2{}}{\cf11{;}} {\cf2{}}{\cf5{//LED}}}\par\pard
\cbpat1{{\cf2{    USART_XmitArray}}{\cf11{[}}{\cf2{DATA_{4}}}{\cf11{] 		=}} {\cf2{}}{\cf4{{0}x{0}F}}{\cf2{}}{\cf11{;}} {\cf2{}}{\cf5{//LastCamera}}}\par\pard
\cbpat1{{\cf2{    USART_XmitArray}}{\cf11{[}}{\cf2{CHECKSUM}}{\cf11{] 		=}} {\cf2{}}{\cf4{{0}xFF}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{{\cf13{void}} {\cf2{}}{\cf15{InitSPECIAL_ReqArray}}{\cf2{}}{\cf11{(}} {\cf2{}}{\cf13{void}} {\cf2{}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{    SPECIAL_ReqArray}}{\cf11{[}}{\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{] =}}  {\cf2{BAT_STATUS}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{    SPECIAL_ReqArray}}{\cf11{[}}{\cf2{}}{\cf4{{1}}}{\cf2{}}{\cf11{] =}}  {\cf2{NULL}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{    SPECIAL_ReqArray}}{\cf11{[}}{\cf2{}}{\cf4{{2}}}{\cf2{}}{\cf11{] =}}  {\cf2{NULL}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{    SPECIAL_ReqArray}}{\cf11{[}}{\cf2{}}{\cf4{{3}}}{\cf2{}}{\cf11{] =}}  {\cf2{NULL}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{    SPECIAL_ReqArray}}{\cf11{[}}{\cf2{}}{\cf4{{4}}}{\cf2{}}{\cf11{] =}}  {\cf2{TRASH}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Function}}}\par\pard
\cbpat1{{\cf6{	 UpdateRoamerNum}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Parameters}}}\par\pard
\cbpat1{{\cf6{     char NewNumber}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Returns}}}\par\pard
\cbpat1{{\cf6{     Nothing}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{     Updates the module level variable RoamerNum with a new value for comparing}}}\par\pard
\cbpat1{{\cf6{	 with a PODS connect message}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf13{void}} {\cf2{}}{\cf15{UpdateRoamerNum}}{\cf2{}}{\cf11{(}} {\cf2{}}{\cf13{char}} {\cf2{NewNumber}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{    RoamerNum}} {\cf11{=}} {\cf2{NewNumber}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Function}}}\par\pard
\cbpat1{{\cf6{	 UpdateUSART_XmitArray}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Parameters}}}\par\pard
\cbpat1{{\cf6{     char Element, char Value}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Returns}}}\par\pard
\cbpat1{{\cf6{     Nothing}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{     Updates the array element specified with the value specified.}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf13{void}} {\cf2{}}{\cf15{UpdateUSART_XmitArray}}{\cf2{}}{\cf11{(}} {\cf2{}}{\cf13{char}} {\cf2{Element}}{\cf11{,}} {\cf2{}}{\cf13{char}} {\cf2{Value}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{    USART_XmitArray}}{\cf11{[}}{\cf2{Element}}{\cf11{] =}} {\cf2{Value}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}{\cf2{}}}\par\pard
\cbpat1{}}
