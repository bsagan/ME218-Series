{\rtf1\ansi\uc0 \deff1{\fonttbl{\f1\fmodern\fprq1\fcharset0 MS Shell Dlg 2;}}{\colortbl;\red255\green255\blue255;\red51\green00\blue102;\red24\green97\blue167;\red50\green186\blue06;\red00\green102\blue51;\red00\green102\blue51;\red166\green23\blue97;\red83\green116\blue176;\red102\green51\blue00;\red154\green154\blue154;\red85\green85\blue85;\red255\green48\blue48;\red244\green140\blue35;\red00\green00\blue255;\red209\green28\blue237;}
\paperw11905\paperh16837\margl1134\margr1134\margt1134\margb1134\sectd\plain\f1\fs20
\pard \cbpat1{{\cf2{}}{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Module}}}\par\pard
\cbpat1{{\cf6{     ES_Configure.h}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{     This file contains macro definitions that are edited by the user to}}}\par\pard
\cbpat1{{\cf6{     adapt the Events and Services framework to a particular application.}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ History}}}\par\pard
\cbpat1{{\cf6{ When           Who     What/Why}}}\par\pard
\cbpat1{{\cf6{ -------------- ---     --------}}}\par\pard
\cbpat1{{\cf6{ {0}{1}/{1}{5}/{1}{2} {1}{0}:{0}{3} jec      started coding}}}\par\pard
\cbpat1{{\cf6{*****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{{\cf8{#ifndef CONFIGURE_H}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define CONFIGURE_H}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// The maximum number of services sets an upper bound on the number of}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// services that the framework will handle. Reasonable values are {8} and {1}{6}}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// HOWEVER: at this time only a value of {8} is supported.}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define MAX_NUM_SERVICES {8}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// This macro determines that nuber of services that are *actually* used in}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// a particular application. It will vary in value from {1} to MAX_NUM_SERVICES}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define NUM_SERVICES {5}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// These are the definitions for Service {0}, the lowest priority service}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// every Events and Services application must have a Service {0}. Further}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// services are added in numeric sequence ({1},{2},{3},...) with increasing}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// priorities}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the header file with the public fuction prototypes}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{0}_HEADER}} {\cf9{"ArtilleryFSM.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the name of the Init function}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{0}_INIT InitArtilleryFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the name of the run function}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{0}_RUN RunArtilleryFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// How big should this services Queue be?}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{0}_QUEUE_SIZE {3}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// The following sections are used to define the parameters for each of the}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// services. You only need to fill out as many as the number of services}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// defined by NUM_SERVICES}}}\par\pard
\cbpat1{{\cf2{}}{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// These are the definitions for Service {1}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#if NUM_SERVICES > {1}}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the header file with the public fuction prototypes}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{1}_HEADER}} {\cf9{"DriveTrainService.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the name of the Init function}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{1}_INIT InitDriveTrainService}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the name of the run function}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{1}_RUN RunDriveTrainService}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// How big should this services Queue be?}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{1}_QUEUE_SIZE {3}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// These are the definitions for Service {2}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#if NUM_SERVICES > {2}}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the header file with the public fuction prototypes}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{2}_HEADER}} {\cf9{"NavigationFSM.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the name of the Init function}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{2}_INIT InitNavigationFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the name of the run function}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{2}_RUN RunNavigationFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// How big should this services Queue be?}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{2}_QUEUE_SIZE {3}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// These are the definitions for Service {3}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#if NUM_SERVICES > {3}}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the header file with the public fuction prototypes}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{3}_HEADER}}  {\cf9{"FAC_FSM.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the name of the Init function}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{3}_INIT InitFAC_FSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the name of the run function}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{3}_RUN RunFAC_FSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// How big should this services Queue be?}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{3}_QUEUE_SIZE {3}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// These are the definitions for Service {4}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#if NUM_SERVICES > {4}}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the header file with the public fuction prototypes}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{4}_HEADER}} {\cf9{"StrategyFSM.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the name of the Init function}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{4}_INIT InitStrategyFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the name of the run function}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{4}_RUN RunStrategyFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// How big should this services Queue be?}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{4}_QUEUE_SIZE {6}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// These are the definitions for Service {5}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#if NUM_SERVICES > {5}}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the header file with the public fuction prototypes}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{5}_HEADER}} {\cf9{"TestService.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the name of the Init function}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{5}_INIT TestServiceInit}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the name of the run function}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{5}_RUN TestServiceRun}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// How big should this services Queue be?}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{5}_QUEUE_SIZE {3}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// These are the definitions for Service {6}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#if NUM_SERVICES > {6}}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the header file with the public fuction prototypes}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{6}_HEADER}} {\cf9{"TestService.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the name of the Init function}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{6}_INIT TestServiceInit}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the name of the run function}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{6}_RUN TestServiceRun}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// How big should this services Queue be?}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{6}_QUEUE_SIZE {3}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// These are the definitions for Service {7}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#if NUM_SERVICES > {7}}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the header file with the public fuction prototypes}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{7}_HEADER}} {\cf9{"TestService.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the name of the Init function}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{7}_INIT TestServiceInit}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the name of the run function}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{7}_RUN TestServiceRun}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// How big should this services Queue be?}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define SERV_{7}_QUEUE_SIZE {3}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// the name of the posting function that you want executed when a new}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// keystroke is detected.}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// The default initialization distributes keystrokes to all state machines}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define POST_KEY_FUNC ES_PostAll}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// Name/define the events of interest}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// Universal events occupy the lowest entries, followed by user-defined events}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{typedef}} {\cf2{}}{\cf13{enum}} {\cf2{}}{\cf11{\{}}  {\cf2{ES_NO_EVENT}} {\cf11{=}} {\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{,}}}\par\pard
\cbpat1{{\cf2{                ES_ERROR}}{\cf11{,}}  {\cf2{}}{\cf6{/* used to indicate an error from the service */}}{\cf2{}\par\pard
\cbpat1{                ES_INIT}}{\cf11{,}}   {\cf2{}}{\cf6{/* used to transition from initial pseudo-state */}}{\cf2{}\par\pard
\cbpat1{                ES_NEW_KEY}}{\cf11{,}} {\cf2{}}{\cf6{/* signals a new key received from terminal */}}{\cf2{}\par\pard
\cbpat1{                ES_TIMEOUT}}{\cf11{,}} {\cf2{}}{\cf6{/* signals that the timer has expired */}}{\cf2{}}}\par\pard
\cbpat1{                {\cf6{/* User-defined events start here */}}{\cf2{}}}\par\pard
\cbpat1{                {\cf5{//DRIVE TRAIN SERVICE EVENTS}}}\par\pard
\cbpat1{{\cf2{                ROTATE}}{\cf11{,}}             {\cf2{}}{\cf5{//rotate motors CW or CCW}}}\par\pard
\cbpat1{{\cf2{                ROTATE_HALF}}{\cf11{,}}        {\cf2{}}{\cf5{//rotate motors CW or CCW half power}}}\par\pard
\cbpat1{{\cf2{                DRIVE}}{\cf11{,}}              {\cf2{}}{\cf5{//drive motors forward or backward}}}\par\pard
\cbpat1{{\cf2{                BACKUP_HALF}}{\cf11{,}}         {\cf2{}}{\cf5{//reverse to resupply}}}\par\pard
\cbpat1{{\cf2{                STOP_MOTOR}}{\cf11{,}}         {\cf2{}}{\cf5{//stop motor}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                {\cf5{//FAC SM EVENTS}}}\par\pard
\cbpat1{{\cf2{                SPIF_SET}}{\cf11{,}}           {\cf2{}}{\cf5{//slave message has been received}}}\par\pard
\cbpat1{{\cf2{                FAC_UPDATED}}{\cf11{,}}        {\cf2{}}{\cf5{//all {3}{9} ships have been updated}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                {\cf5{//NAVIGATION SM EVENTS}}}\par\pard
\cbpat1{{\cf2{                NEW_DESTINATION}}{\cf11{,}}    {\cf2{}}{\cf5{//new destination given as ship #, query coord from FAC}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                {\cf5{//ALIGNMENT SERVICE EVENTS}}}\par\pard
\cbpat1{{\cf2{                ALIGNPP}}{\cf11{,}}            {\cf2{}}{\cf5{//align to power plant}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                {\cf5{//ARTILLERY SM EVENTS}}}\par\pard
\cbpat1{{\cf2{                FLYWHEEL_RAMPUP}}{\cf11{,}}    {\cf2{}}{\cf5{//start speeding up flywheel}}}\par\pard
\cbpat1{{\cf2{                FLYWHEEL_OFF}}{\cf11{,}}       {\cf2{}}{\cf5{//set flywheel rpm = {0}}}}\par\pard
\cbpat1{{\cf2{                FLYWHEEL_ATSPEED}}{\cf11{,}}   {\cf2{}}{\cf5{//flywheel rpm at designated speed, posted from OC interrupt response routine}}}\par\pard
\cbpat1{{\cf2{                NO_SHOT}}{\cf11{,}}}\par\pard
\cbpat1{{\cf2{                CANNON_READY}}{\cf11{,}}       {\cf2{}}{\cf5{//cannon ready for firing}}}\par\pard
\cbpat1{{\cf2{                BALL_DEPLOYED}}{\cf11{,}}      {\cf2{}}{\cf5{//ball fired}}}\par\pard
\cbpat1{{\cf2{}}                {\cf5{//NEED_REFILL,        //refill {5}-ball hopper}}}\par\pard
\cbpat1{{\cf2{                FIREUP}}{\cf11{,}}             {\cf2{}}{\cf5{//Strategy posts to Artillery to start firing up flywheel}}}\par\pard
\cbpat1{{\cf2{                FIRE}}{\cf11{,}}               {\cf2{}}{\cf5{//Command to unleash hell}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{                {\cf5{//STRATEGY FSM EVENTS}}}\par\pard
\cbpat1{{\cf2{                GAME_START}}{\cf11{,}}         {\cf2{}}{\cf5{//Game started, time to kill some ships}}}\par\pard
\cbpat1{{\cf2{                DESTINATION_REACHED}}{\cf11{,}}        {\cf2{}}{\cf5{//NavSM posts to Strategy we got to Location}}}\par\pard
\cbpat1{{\cf2{                READY{2}RELOAD}}{\cf11{,}}}\par\pard
\cbpat1{{\cf2{                EVAL_INSTRUCTION}}{\cf11{,}}   {\cf2{}}{\cf5{//Evaluate the instruction in the array}}}\par\pard
\cbpat1{{\cf2{                GAME_OVER}}{\cf11{,}}           {\cf2{}}{\cf5{//game over event}}}\par\pard
\cbpat1{{\cf2{                RESUPPLY_COVER_REACHED}} {\cf5{//Stop Controller during Resupply}}}\par\pard
\cbpat1{{\cf2{}}             {\cf11{\}}} {\cf2{ES_EventTyp_t}} {\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// These are the definitions for the Distribution lists. Each definition}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// should be a comma seperated list of post functions to indicate which}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// services are on that distribution list.}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define NUM_DIST_LISTS {0}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#if NUM_DIST_LISTS > {0}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define DIST_LIST{0} PostTemplateFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#if NUM_DIST_LISTS > {1}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define DIST_LIST{1} PostTemplateFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#if NUM_DIST_LISTS > {2}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define DIST_LIST{2} PostTemplateFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#if NUM_DIST_LISTS > {3}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define DIST_LIST{3} PostTemplateFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#if NUM_DIST_LISTS > {4}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define DIST_LIST{4} PostTemplateFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#if NUM_DIST_LISTS > {5}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define DIST_LIST{5} PostTemplateFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#if NUM_DIST_LISTS > {6}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define DIST_LIST{6} PostTemplateFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#if NUM_DIST_LISTS > {7}}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define DIST_LIST{7} PostTemplateFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// This are the name of the Event checking funcion header file.}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define EVENT_CHECK_HEADER}} {\cf9{"EventCheckers.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// This is the list of event checking functions}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define EVENT_CHECK_LIST CheckSPIF, CheckPPAlignment, CheckBackedUp, CheckGameActive, CheckCamouflaged}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// These are the definitions for the post functions to be executed when the}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// correspnding timer expires. All {8} must be defined. If you are not using}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// a timers, then you can use TIMER_UNUSED}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define TIMER_UNUSED ((pPostFunc){0})}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define TIMER{0}_RESP_FUNC PostFAC_FSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define TIMER{1}_RESP_FUNC PostFAC_FSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define TIMER{2}_RESP_FUNC PostStrategyFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define TIMER{3}_RESP_FUNC PostStrategyFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define TIMER{4}_RESP_FUNC PostStrategyFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define TIMER{5}_RESP_FUNC PostStrategyFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define TIMER{6}_RESP_FUNC PostArtilleryFSM}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define TIMER{7}_RESP_FUNC TIMER_UNUSED}} {\cf5{//PostNavigationFSM}}}\par\pard
\cbpat1{{\cf8{}}{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// Give the timer numbers symbolc names to make it easier to move them}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// to different timers if the need arises. Keep these definitons close to the}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// definitions for the response functions to make it easier to check that}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// the timer number matches where the timer event will be routed}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf8{#define FACUPDATE_TIMER    {0}}} {\cf5{//FAC update all timer}}}\par\pard
\cbpat1{{\cf8{}}{\cf2{}}{\cf8{#define SS_TIMER           {1}}} {\cf5{//{2}ms SlaveSelect timer}}}\par\pard
\cbpat1{{\cf8{}}{\cf2{}}{\cf8{#define GAME_TIMER         {2}}} {\cf5{//{2} minute Game_Timer}}}\par\pard
\cbpat1{{\cf8{}}{\cf2{}}{\cf8{#define RELOAD_TIMER       {3}}} {\cf5{//{1}{6}.{5} seconds at the Reload Station}}}\par\pard
\cbpat1{{\cf8{}}{\cf2{}}{\cf8{#define MOVE_TIMER         {4}}} {\cf5{//{1} second timer to move out of shade of Reload Station}}}\par\pard
\cbpat1{{\cf8{}}{\cf2{}}{\cf8{#define ALIGN_TIMER        {5}}} {\cf5{//{4} second timer to detect enemy's power plant}}}\par\pard
\cbpat1{{\cf8{}}{\cf2{}}{\cf8{#define ARTILLERY_TIMER    {6}}} {\cf5{//timer to tell when flywheel is up to speed}}}\par\pard
\cbpat1{{\cf8{}}{\cf2{}}{\cf8{#define TIGHT_TURN_TIMER   {7}}} {\cf5{//timer to hold Motor commands while making slow turns}}}\par\pard
\cbpat1{{\cf8{}}{\cf2{}}{\cf8{#endif}} {\cf6{/* CONFIGURE_H */}}{\cf8{}}{\cf2{}}}\par\pard
\cbpat1{}}
